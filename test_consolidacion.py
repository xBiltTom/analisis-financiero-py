"""
Script de prueba para la funcionalidad de consolidaci√≥n multi-per√≠odo
"""
import os
from extractor_estados_mejorado import extraer_estados_desde_archivo

# Procesar m√∫ltiples archivos POST-2010
archivos_post_2010 = [
    "ejemplos/REPORTE DETALLE FINANCIERO 2024.html",
    "ejemplos/REPORTE DETALLE FINANCIERO 2023.html",
    "ejemplos/REPORTE DETALLE FINANCIERO 2022.html",
    "ejemplos/REPORTE DETALLE FINANCIERO 2021.html",
    "ejemplos/REPORTE DETALLE FINANCIERO 2020.html"
]

print("="*80)
print("PRUEBA DE CONSOLIDACI√ìN MULTI-PER√çODO (POST-2010)")
print("="*80)

# Extraer datos de cada archivo
datos_extraidos = []
for archivo in archivos_post_2010:
    if os.path.exists(archivo):
        print(f"\nüìÑ Procesando: {archivo}")
        resultados = extraer_estados_desde_archivo(archivo)
        
        empresa = resultados['metadatos'].get('empresa', 'N/A')
        a√±o = resultados['a√±o_documento']
        
        # Contar a√±os √∫nicos en cada estado
        a√±os_unicos = set()
        for estado in resultados['estados'].values():
            a√±os_unicos.update(estado['a√±os'])
        
        print(f"   ‚úÖ Empresa: {empresa}")
        print(f"   ‚úÖ A√±o del reporte: {a√±o}")
        print(f"   ‚úÖ A√±os disponibles en datos: {sorted(a√±os_unicos, reverse=True)}")
        
        datos_extraidos.append(resultados)
    else:
        print(f"‚ùå Archivo no encontrado: {archivo}")

print("\n" + "="*80)
print(f"‚úÖ Total de archivos procesados: {len(datos_extraidos)}")

# Recolectar todos los a√±os √∫nicos
todos_los_a√±os = set()
for datos in datos_extraidos:
    for estado in datos['estados'].values():
        todos_los_a√±os.update(estado['a√±os'])

print(f"üìÖ A√±os √∫nicos consolidados: {sorted(todos_los_a√±os, reverse=True)}")
print("="*80)

# Mostrar ejemplo de consolidaci√≥n para Estado de Situaci√≥n Financiera
print("\nüìä EJEMPLO: Consolidaci√≥n de Estado de Situaci√≥n Financiera")
print("-"*80)

# Diccionario para consolidar cuentas
cuentas_consolidadas = {}

for datos in datos_extraidos:
    if 'balance' in datos['estados']:
        balance = datos['estados']['balance']
        
        for cuenta in balance['cuentas'][:10]:  # Solo las primeras 10 cuentas como ejemplo
            nombre_cuenta = cuenta['nombre']
            
            if nombre_cuenta not in cuentas_consolidadas:
                cuentas_consolidadas[nombre_cuenta] = {}
            
            # Agregar valores por a√±o
            for a√±o, valor in cuenta['valores'].items():
                if a√±o not in cuentas_consolidadas[nombre_cuenta]:
                    cuentas_consolidadas[nombre_cuenta][a√±o] = valor

# Mostrar resultado
print(f"\nCuentas consolidadas (primeras 10):\n")
for cuenta, valores in list(cuentas_consolidadas.items())[:10]:
    a√±os_str = ", ".join([f"{a√±o}: {val:,.0f}" for a√±o, val in sorted(valores.items(), reverse=True)])
    print(f"‚Ä¢ {cuenta}")
    print(f"  {a√±os_str}")

print("\n" + "="*80)
print("‚úÖ PRUEBA COMPLETADA")
print("="*80)
