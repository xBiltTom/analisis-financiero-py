"""
TEST DE AN√ÅLISIS EN 3 FASES - Sistema Mejorado
==============================================

Prueba el nuevo sistema que divide el an√°lisis en 3 solicitudes especializadas:
1. Liquidez y Endeudamiento
2. Rentabilidad y Actividad  
3. Conclusi√≥n General
"""

from groq import Groq

def test_analisis_3_fases():
    print("="*80)
    print("TEST DE AN√ÅLISIS EN 3 FASES ESPECIALIZADAS")
    print("="*80 + "\n")
    
    # Datos de ejemplo
    empresa = "CORPORACI√ìN EJEMPLO S.A."
    a√±os = [2024, 2023, 2022]
    
    # Ratios de ejemplo
    ratios_por_a√±o = {
        2024: {
            'liquidez_corriente': 1.85,
            'prueba_acida': 1.45,
            'razon_deuda_total': 0.52,
            'razon_deuda_patrimonio': 1.08,
            'margen_neto': 0.08,
            'roa': 0.06,
            'roe': 0.12,
            'rotacion_activos_totales': 1.25,
            'rotacion_cuentas_cobrar': 8.5,
            'rotacion_inventarios': 6.2
        },
        2023: {
            'liquidez_corriente': 1.75,
            'prueba_acida': 1.35,
            'razon_deuda_total': 0.48,
            'razon_deuda_patrimonio': 0.92,
            'margen_neto': 0.07,
            'roa': 0.055,
            'roe': 0.11,
            'rotacion_activos_totales': 1.30,
            'rotacion_cuentas_cobrar': 7.8,
            'rotacion_inventarios': 5.9
        },
        2022: {
            'liquidez_corriente': 1.65,
            'prueba_acida': 1.25,
            'razon_deuda_total': 0.45,
            'razon_deuda_patrimonio': 0.82,
            'margen_neto': 0.065,
            'roa': 0.05,
            'roe': 0.09,
            'rotacion_activos_totales': 1.35,
            'rotacion_cuentas_cobrar': 7.2,
            'rotacion_inventarios': 5.5
        }
    }
    
    # Inicializar cliente
    client = Groq(api_key="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")
    
    analisis_partes = []
    
    # ==================== FASE 1: LIQUIDEZ Y ENDEUDAMIENTO ====================
    print("üìä FASE 1/3: Analizando Liquidez y Endeudamiento...")
    
    prompt1 = f"""Eres un analista financiero experto. Analiza √öNICAMENTE los ratios de LIQUIDEZ y ENDEUDAMIENTO de {empresa}.

**EMPRESA:** {empresa}
**A√ëOS:** {', '.join(map(str, a√±os))}

**DATOS DE LIQUIDEZ Y ENDEUDAMIENTO:**
"""
    for a√±o in a√±os:
        ratios = ratios_por_a√±o[a√±o]
        prompt1 += f"\n**{a√±o}:**\n"
        prompt1 += f"‚Ä¢ Liquidez Corriente: {ratios['liquidez_corriente']}\n"
        prompt1 += f"‚Ä¢ Prueba √Åcida: {ratios['prueba_acida']}\n"
        prompt1 += f"‚Ä¢ Raz√≥n Deuda Total: {ratios['razon_deuda_total']}\n"
        prompt1 += f"‚Ä¢ Raz√≥n Deuda/Patrimonio: {ratios['razon_deuda_patrimonio']}\n"
    
    prompt1 += """
**INSTRUCCIONES:**
- Analiza SOLO liquidez y endeudamiento (NO menciones rentabilidad ni actividad)
- S√© espec√≠fico con los n√∫meros y proporciona an√°lisis DETALLADO
- Identifica tendencias, alertas y explica sus causas probables
- Proporciona contexto comparativo entre a√±os
- M√°ximo 15-18 l√≠neas

**ESTRUCTURA:**
1. **LIQUIDEZ** (8-9 l√≠neas): Analiza Liquidez Corriente y Prueba √Åcida. ¬øPuede pagar obligaciones a corto plazo? ¬øC√≥mo ha evolucionado? ¬øQu√© significa cada cambio? ¬øEs saludable para la industria?
2. **ENDEUDAMIENTO** (7-9 l√≠neas): Analiza Raz√≥n Deuda Total y Deuda/Patrimonio. ¬øNivel de riesgo? ¬øApalancamiento adecuado? ¬øTendencia? ¬øC√≥mo afecta la capacidad de endeudamiento futuro? ¬øAlertas espec√≠ficas?
"""
    
    completion1 = client.chat.completions.create(
        model="openai/gpt-oss-20b",
        messages=[
            {
                "role": "system",
                "content": "Eres un analista financiero experto en an√°lisis de liquidez y endeudamiento. Proporciona an√°lisis DETALLADOS y espec√≠ficos centrados √öNICAMENTE en estos aspectos. Explica causas, consecuencias y contexto."
            },
            {
                "role": "user",
                "content": prompt1
            }
        ],
        temperature=0.6,
        max_tokens=2500,
        top_p=0.9
    )
    
    analisis_partes.append(completion1.choices[0].message.content)
    print("‚úÖ Fase 1 completada\n")
    
    # ==================== FASE 2: RENTABILIDAD Y ACTIVIDAD ====================
    print("üí∞ FASE 2/3: Analizando Rentabilidad y Eficiencia...")
    
    prompt2 = f"""Eres un analista financiero experto. Analiza √öNICAMENTE los ratios de RENTABILIDAD y ACTIVIDAD de {empresa}.

**EMPRESA:** {empresa}
**A√ëOS:** {', '.join(map(str, a√±os))}

**DATOS DE RENTABILIDAD Y ACTIVIDAD:**
"""
    for a√±o in a√±os:
        ratios = ratios_por_a√±o[a√±o]
        prompt2 += f"\n**{a√±o}:**\n"
        prompt2 += f"‚Ä¢ Margen Neto: {ratios['margen_neto']}\n"
        prompt2 += f"‚Ä¢ ROA: {ratios['roa']}\n"
        prompt2 += f"‚Ä¢ ROE: {ratios['roe']}\n"
        prompt2 += f"‚Ä¢ Rotaci√≥n Activos Totales: {ratios['rotacion_activos_totales']}\n"
        prompt2 += f"‚Ä¢ Rotaci√≥n CxC: {ratios['rotacion_cuentas_cobrar']}\n"
        prompt2 += f"‚Ä¢ Rotaci√≥n Inventarios: {ratios['rotacion_inventarios']}\n"
    
    prompt2 += """
**INSTRUCCIONES:**
- Analiza SOLO rentabilidad y actividad (NO menciones liquidez ni endeudamiento)
- S√© espec√≠fico con los n√∫meros y proporciona an√°lisis DETALLADO
- Identifica si genera valor para accionistas y explica por qu√©
- Compara entre a√±os y explica cambios significativos
- M√°ximo 18-20 l√≠neas

**ESTRUCTURA:**
1. **RENTABILIDAD** (9-10 l√≠neas): Analiza Margen Neto, ROA y ROE. ¬øGenera ganancias suficientes? ¬øC√≥mo ha evolucionado cada indicador? ¬øEl retorno es adecuado para los accionistas? ¬øQu√© factores pueden estar influyendo? ¬øComparaci√≥n con tendencias del sector?
2. **EFICIENCIA OPERATIVA** (9-10 l√≠neas): Analiza rotaciones de activos, CxC e inventarios. ¬øUso eficiente de recursos? ¬øQu√© indican las rotaciones sobre la gesti√≥n operativa? ¬øProblemas de cobranza o inventarios obsoletos? ¬øTendencia de mejora o deterioro?
"""
    
    completion2 = client.chat.completions.create(
        model="openai/gpt-oss-20b",
        messages=[
            {
                "role": "system",
                "content": "Eres un analista financiero experto en rentabilidad y eficiencia operativa. Proporciona an√°lisis DETALLADOS y espec√≠ficos centrados √öNICAMENTE en estos aspectos. Explica causas, impactos y comparaciones."
            },
            {
                "role": "user",
                "content": prompt2
            }
        ],
        temperature=0.6,
        max_tokens=2800,
        top_p=0.9
    )
    
    analisis_partes.append(completion2.choices[0].message.content)
    print("‚úÖ Fase 2 completada\n")
    
    # ==================== FASE 3: CONCLUSI√ìN GENERAL ====================
    print("üéØ FASE 3/3: Generando Conclusi√≥n General...")
    
    prompt3 = f"""Eres un analista financiero experto. Genera una CONCLUSI√ìN GENERAL integradora sobre {empresa}.

**EMPRESA:** {empresa}
**A√ëOS:** {', '.join(map(str, a√±os))}

**RESUMEN DE TODOS LOS RATIOS:**
"""
    for a√±o in a√±os:
        ratios = ratios_por_a√±o[a√±o]
        prompt3 += f"\n**{a√±o}:** Liquidez={ratios['liquidez_corriente']}, Deuda={ratios['razon_deuda_total']}, ROE={ratios['roe']}, Rotaci√≥n={ratios['rotacion_activos_totales']}\n"
    
    prompt3 += """
**INSTRUCCIONES:**
- Integra TODOS los aspectos: liquidez, endeudamiento, rentabilidad y eficiencia
- Identifica el PATR√ìN GENERAL entre a√±os con an√°lisis PROFUNDO
- Eval√∫a salud financiera GLOBAL y perspectivas futuras
- Proporciona 3-4 RECOMENDACIONES espec√≠ficas, accionables y priorizadas
- M√°ximo 15-18 l√≠neas

**ESTRUCTURA:**
1. **DIAGN√ìSTICO INTEGRAL** (6-7 l√≠neas): ¬øC√≥mo est√° la empresa en general? ¬øFortalezas principales? ¬øDebilidades cr√≠ticas? ¬øBalance entre liquidez, rentabilidad y eficiencia? ¬øPosici√≥n competitiva probable?
2. **TENDENCIA GLOBAL** (4-5 l√≠neas): ¬øMejorando o deterior√°ndose? ¬øSostenible a mediano plazo? ¬øRiesgos principales? ¬øOportunidades visibles?
3. **RECOMENDACIONES ESTRAT√âGICAS** (5-6 l√≠neas): 3-4 acciones concretas prioritarias con justificaci√≥n breve. ¬øQu√© hacer primero? ¬øQu√© evitar?
"""
    
    completion3 = client.chat.completions.create(
        model="openai/gpt-oss-20b",
        messages=[
            {
                "role": "system",
                "content": "Eres un analista financiero senior que integra todos los aspectos financieros para dar un diagn√≥stico completo y recomendaciones estrat√©gicas. Proporciona an√°lisis PROFUNDO con visi√≥n hol√≠stica y recomendaciones priorizadas."
            },
            {
                "role": "user",
                "content": prompt3
            }
        ],
        temperature=0.6,
        max_tokens=2500,
        top_p=0.9
    )
    
    analisis_partes.append(completion3.choices[0].message.content)
    print("‚úÖ Fase 3 completada\n")
    
    # Combinar resultados
    analisis_completo = f"""# AN√ÅLISIS FINANCIERO INTEGRAL - {empresa}

## üìä PARTE 1: AN√ÅLISIS DE LIQUIDEZ Y ENDEUDAMIENTO

{analisis_partes[0]}

---

## üí∞ PARTE 2: AN√ÅLISIS DE RENTABILIDAD Y EFICIENCIA

{analisis_partes[1]}

---

## üéØ PARTE 3: CONCLUSI√ìN GENERAL Y RECOMENDACIONES

{analisis_partes[2]}

---

*An√°lisis generado mediante IA (OpenAI GPT-4o-mini via Groq) en 3 fases especializadas*
"""
    
    # Mostrar resultado final
    print("="*80)
    print("AN√ÅLISIS COMPLETO GENERADO")
    print("="*80)
    print(analisis_completo)
    print("="*80)
    
    # Estad√≠sticas
    print(f"\nüìä ESTAD√çSTICAS:")
    print(f"   Total de caracteres: {len(analisis_completo)}")
    print(f"   Total de l√≠neas: {analisis_completo.count(chr(10)) + 1}")
    print(f"   Fases generadas: 3")
    print(f"\n‚úÖ PRUEBA COMPLETADA EXITOSAMENTE")

if __name__ == "__main__":
    test_analisis_3_fases()
